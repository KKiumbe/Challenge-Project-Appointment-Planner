{"ast":null,"code":"var _jsxFileName = \"/Volumes/Software/codeacademy/appointment-planner-starting-v18/src/components/contactForm/ContactForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactForm = _ref => {\n  _s();\n  let {\n    name,\n    setName,\n    phone,\n    setPhone,\n    email,\n    setEmail,\n    handleSubmit\n  } = _ref;\n  const [setSubmitted] = useState(false);\n  const [isDuplicate, setIsDuplicate] = useState(false);\n  const duplicate = existingNames.includes(newName);\n  setIsDuplicate(duplicate);\n  setName(newName);\n\n  // Function to handle form submission\n  const handleSubmitForm = event => {\n    event.preventDefault();\n    if (name && phone && email && !isDuplicate) {\n      handleSubmit();\n      setSubmitted(true);\n      if (isDuplicate) {\n        alert(\"values cannot be duplicates.\");\n      }\n    } else {\n      alert(\"Please fill in all required fields.\");\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: phone,\n            onChange: e => setPhone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email Addres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  };\n};\n_s(ContactForm, \"dk600a/KVjIwpSpZVTpMk/V/Aek=\");\n_c = ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactForm","_ref","_s","name","setName","phone","setPhone","email","setEmail","handleSubmit","setSubmitted","isDuplicate","setIsDuplicate","duplicate","existingNames","includes","newName","handleSubmitForm","event","preventDefault","alert","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Volumes/Software/codeacademy/appointment-planner-starting-v18/src/components/contactForm/ContactForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\n\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n\r\n\r\n}) => {\r\n  const [setSubmitted] =useState(false);\r\n  const [isDuplicate, setIsDuplicate] = useState(false);\r\n\r\n  const duplicate = existingNames.includes(newName);\r\n    setIsDuplicate(duplicate);\r\n    setName(newName);\r\n\r\n\r\n   // Function to handle form submission\r\n   const handleSubmitForm = (event) => {\r\n    event.preventDefault(); \r\n    if (name && phone && email &&!isDuplicate) {\r\n      \r\n      handleSubmit();\r\n    \r\n      setSubmitted(true);\r\n\r\n      if(isDuplicate){\r\n        alert(\"values cannot be duplicates.\");\r\n      }\r\n    } else {\r\n      \r\n      alert(\"Please fill in all required fields.\");\r\n    }\r\n  return (\r\n    <>\r\n    <form onSubmit={handleSubmitForm}>\r\n\r\n<div>\r\n<label>Name</label>\r\n<input type=\"text\" value={name} onChange={(e) => setName(e.target.value)}></input>\r\n</div>\r\n\r\n<div>\r\n<label>Phone Number</label>\r\n<input type=\"number\" value={phone} onChange={(e)=>setPhone(e.target.value)}></input>\r\n</div>\r\n<div>\r\n  \r\n<label>Email Addres</label>\r\n<input type=\"email\" value={email} onChange={(e)=>setEmail(e.target.value)}></input>\r\n</div>\r\n<button type=\"submit\">Submit</button>\r\n    </form>\r\n    </>\r\n  );\r\n}\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Volumes/Software/codeacademy/appointment-planner-starting-v18/src/containers/appointmentsPage/AppointmentsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AppointmentForm from '../../components/appointmentForm/AppointmentForm'; // Adjust the path based on your directory structure\nimport { TileList } from '../../components/tileList/TileList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentsPage = _ref => {\n  _s();\n  let {\n    appointments,\n    contacts,\n    addAppointmentCallback\n  } = _ref;\n  // Local state variables to track form inputs\n  const [name, setName] = useState('');\n  const [contact, setContact] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n\n  // Callback function to handle form submission\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Add the new appointment using the callback function\n    addAppointmentCallback(name, contact, date, time);\n    // Clear the form\n    setName('');\n    setContact('');\n    setDate('');\n    setTime('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppointmentForm, {\n      name: name,\n      setName: setName,\n      contact: contact,\n      setContact: setContact,\n      date: date,\n      setDate: setDate,\n      time: time,\n      setTime: setTime,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TileList, {\n      data: appointments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentsPage, \"BBiC5H60m9BX0YukLjPuSibNVlg=\");\n_c = AppointmentsPage;\nexport default AppointmentsPage;\nvar _c;\n$RefreshReg$(_c, \"AppointmentsPage\");","map":{"version":3,"names":["React","useState","AppointmentForm","TileList","jsxDEV","_jsxDEV","AppointmentsPage","_ref","_s","appointments","contacts","addAppointmentCallback","name","setName","contact","setContact","date","setDate","time","setTime","handleSubmit","event","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["/Volumes/Software/codeacademy/appointment-planner-starting-v18/src/containers/appointmentsPage/AppointmentsPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport AppointmentForm from '../../components/appointmentForm/AppointmentForm'; // Adjust the path based on your directory structure\r\n import {TileList} from '../../components/tileList/TileList';\r\nconst AppointmentsPage = ({ appointments, contacts, addAppointmentCallback }) => {\r\n  // Local state variables to track form inputs\r\n  const [name, setName] = useState('');\r\n  const [contact, setContact] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n\r\n  // Callback function to handle form submission\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Add the new appointment using the callback function\r\n    addAppointmentCallback(name, contact, date, time);\r\n    // Clear the form\r\n    setName('');\r\n    setContact('');\r\n    setDate('');\r\n    setTime('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Add Appointment Section */}\r\n      <h2>Add Appointment</h2>\r\n      <AppointmentForm\r\n        name={name}\r\n        setName={setName}\r\n        contact={contact}\r\n        setContact={setContact}\r\n        date={date}\r\n        setDate={setDate}\r\n        time={time}\r\n        setTime={setTime}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n\r\n      {/* Appointments Section */}\r\n      <h2>Appointments</h2>\r\n      <TileList data={appointments} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppointmentsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,eAAe,MAAM,kDAAkD,CAAC,CAAC;AAC/E,SAAQC,QAAQ,QAAO,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7D,MAAMC,gBAAgB,GAAGC,IAAA,IAAwD;EAAAC,EAAA;EAAA,IAAvD;IAAEC,YAAY;IAAEC,QAAQ;IAAEC;EAAuB,CAAC,GAAAJ,IAAA;EAC1E;EACA,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMmB,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,EAAE;IACtB;IACAX,sBAAsB,CAACC,IAAI,EAAEE,OAAO,EAAEE,IAAI,EAAEE,IAAI,CAAC;IACjD;IACAL,OAAO,CAAC,EAAE,CAAC;IACXE,UAAU,CAAC,EAAE,CAAC;IACdE,OAAO,CAAC,EAAE,CAAC;IACXE,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,oBACEd,OAAA;IAAAkB,QAAA,gBAEElB,OAAA;MAAAkB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACxBtB,OAAA,CAACH,eAAe;MACdU,IAAI,EAAEA,IAAK;MACXC,OAAO,EAAEA,OAAQ;MACjBC,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA,UAAW;MACvBC,IAAI,EAAEA,IAAK;MACXC,OAAO,EAAEA,OAAQ;MACjBC,IAAI,EAAEA,IAAK;MACXC,OAAO,EAAEA,OAAQ;MACjBC,YAAY,EAAEA;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3B,eAGFtB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACrBtB,OAAA,CAACF,QAAQ;MAACyB,IAAI,EAAEnB;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC5B;AAEV,CAAC;AAACnB,EAAA,CAxCIF,gBAAgB;AAAAuB,EAAA,GAAhBvB,gBAAgB;AA0CtB,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}